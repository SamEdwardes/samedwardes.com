---
import H1 from "../../components/H1.astro";
import BrutalButton from "../../components/BrutalButton.astro";
import DefaultLayout from "../../layouts/DefaultLayout.astro";

import { getCollection } from "astro:content";
import TableOfContents from "../../components/TableOfContents.astro";

export const prerender = true;

// 1. Generate a new path for every collection entry
export async function getStaticPaths() {
  const blogEntries = await getCollection("blog");
  const numberOfPosts = blogEntries.length;
  const sortedBlogEntries = blogEntries.sort(
    (a, b) => b.data.date.valueOf() - a.data.date.valueOf()
  );
  return sortedBlogEntries.map((entry, i) => ({
    params: { slug: entry.slug },
    props: {
      entry,
      // Previous post
      prevPost:
        i + 1 === numberOfPosts // If the current post is the oldest
          ? undefined
          : sortedBlogEntries[i + 1],
      // Next post
      nextPost:
        i === 0 // If the current post is the newest
          ? undefined
          : sortedBlogEntries[i - 1],
    },
  }));
}

// 2. For your template, you can get the entry directly from the prop
const { entry, prevPost, nextPost } = Astro.props;
const { Content, headings } = await entry.render();
---

<DefaultLayout metaTitle={`${entry.data.title}`}>
  <!-- Title -->
  <H1>{entry.data.title}</H1>
  <!-- Date -->
  <div class="text-light text-gray-500">
    {
      entry.data.date.toLocaleString("default", {
        month: "long",
      })
    }
    {entry.data.date.getDate()},
    {entry.data.date.getFullYear()}
  </div>
  <section class="grid grid-cols-12 gap-8">
    <!-- Article content -->
    <article class:list={[
      "prose max-w-4xl col-span-9",
      "prose-headings:scroll-mt-24",
    ]}>
      <Content />
    </article>
    <!-- Table of contents -->
    <div class="relative col-span-3">
      <div class="sticky top-24">
        <TableOfContents headings={headings} />
      </div>
    </div>
  </section>
  <!-- Last and next buttons -->
  <section class="pt-8">
    <div class="grid grid-cols-2 gap-8">
      {
        prevPost ? (
          <BrutalButton
            href={`/blog/${prevPost.slug}`}
            class="bg-yellow-400 font-bold prose"
          >
            Previous Post
          </BrutalButton>
        ) : (
          <div />
        )
      }
      {
        nextPost ? (
          <BrutalButton
            href={`/blog/${nextPost.slug}`}
            class="text-right bg-yellow-400 font-bold prose"
          >
            Next Post
          </BrutalButton>
        ) : (
          <div />
        )
      }
    </div>
  </section>
</DefaultLayout>