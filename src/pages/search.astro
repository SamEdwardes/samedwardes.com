---
import DefaultLayout from "../layouts/DefaultLayout.astro";
import H1 from "../components/H1.astro";
---

<DefaultLayout metaTitle="Search">
  <H1>Search</H1>
  <form
    class=""
  >
    <div>
      <label for="search">Search the Blog</label>
      <span>Enter a search term or phrase to search the blog.</span>
    </div>
    <input
      type="search"
      required
      min="2"
      max="24"
      name="search"
      id="search"
      placeholder="Enter a search termâ€¦"
    />
    <button type="submit">Search</button>
  </form>
  <section>
    <ul id="search-results">
      <!-- Search results will be inserted here -->
    </ul>
  </section>
  <script>
    import DOMPurify from "dompurify";
    import Fuse from "fuse.js";

    // Global vars
    let searchTerm;

    // Selectors
    const form = document.querySelector("form");

    async function getSearchIndex() {
      try {
        const res = await fetch("/api/blog-posts.json");
        const data = await res.json();
        const searchIndex = data;
        return searchIndex;
      } catch (e) {
        console.error(e);
      }
    }

    async function doSearch(searchTerm: string) {
      const searchIndex = await getSearchIndex();
      const fuse = new Fuse(searchIndex, {
        keys: [
          {name: "title", weight: 2},
          {name: "description", weight: 1},
          {name: "tags", weight: 2},
          {name: "keywords", weight: 3},
        ],
      });
      const searchResults = fuse.search(searchTerm);
      console.log(`Search results for ${searchTerm}:`, searchResults);

      // Update the page with search results
      const searchResultHTML = document.querySelector("#search-results");
      searchResults.forEach((result) => {
        const li = document.createElement("li");
        li.innerHTML = `
          <a href="/blog/${result.item.slug}">
            <h2>${result.item.title}</h2>
          </a>
        `;
        searchResultHTML.appendChild(li);
      });
    }

    // Event listeners
    form?.addEventListener("submit", (e) => {
      // Don't post the form
      e.preventDefault();

      // Parse the form
      const formData = new FormData(form);
      searchTerm = DOMPurify.sanitize(formData.get("search").toString());

      // Validation of input
      if (!searchTerm || searchTerm.length === 0) return;

      // Update the URL
      const url = new URL("/search", window.location.origin);
      url.searchParams.set("q", searchTerm);
      window.history.replaceState(null, "", url.toString());

      // Search the index
      doSearch(searchTerm);
    });
  </script>
</DefaultLayout>
